name: CI

env:
  CACHE_NAME: node_modules

on: [ pull_request ]

jobs:
  setup-cache:
    name: Setup cache
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Runner setup
        uses: ./.github/actions/runner-setup/

      - name: Install dependencies
        run: pnpm install

      - name: Create cache - ${{ env.CACHE_NAME }}
        uses: ./.github/actions/caching/
        with:
          name: ${{ env.CACHE_NAME }}

  check-formatting:
    name: Check formatting
    runs-on: ubuntu-latest
    needs: [ setup-cache ]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Runner setup
        uses: ./.github/actions/runner-setup/

      - name: Download cache - ${{ env.CACHE_NAME }}
        uses: ./.github/actions/caching/
        with:
          name: ${{ env.CACHE_NAME }}

      - name: Check formatting
        run: pnpm format:check

  test-build-typescript:
    name: Test build typescript
    runs-on: ubuntu-latest
    needs: [ setup-cache ]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Runner setup
        uses: ./.github/actions/runner-setup/

      - name: Download cache - ${{ env.CACHE_NAME }}
        uses: ./.github/actions/caching/
        with:
          name: ${{ env.CACHE_NAME }}

      - name: Test build typescript
        run: |
          touch client/.env
          echo VITE_DISCORD_CLIENT_ID=${{ secrets.VITE_DISCORD_CLIENT_ID }} >> client/.env
          echo VITE_REDIRECT_URL=${{ secrets.VITE_REDIRECT_URL }} >> client/.env
          echo VITE_CLIENT_VERSION=${{ env.GITHUB_SHA_SHORT }} >> client/.env
          pnpm build

  test-build-server-docker:
    name: Test build server docker
    runs-on: ubuntu-latest
    needs: [ setup-cache ]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Runner setup
        uses: ./.github/actions/runner-setup/

      - name: Test build server
        uses: docker/build-push-action@v6
        with:
          context: .
          push: false
          platforms: linux/amd64,linux/arm64
          build-args: DOCKER_SERVER_VERSION=${{ github.ref_name }}

  clear-cache:
    name: Clear Caches
    needs: [ test-build-typescript, test-build-server-docker, check-formatting ]
    if: ${{ always() }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Clear cache
        uses: ./.github/actions/clear-cache/
        with:
          name: ${{ env.CACHE_NAME }}
